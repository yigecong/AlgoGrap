本章内容
1. 两种基本的数据结构——数组与链表
2. 数组与链表的优缺点
3. 很多算法，在数据排序之后才管用


内存工作原理
1. 计算机就像很多抽屉的集合体，每个抽屉都有地址
2. 需要存储多项数据的时候，有两种基本方式——数组和链表


数组
在内存中，选择一列连续的存储集合，用于存储。
当预选的位置没了，需要重新找地方，并将之前的数据移动过去。（猜测：java等语言，需要预定义数组的长度的原因，且数组不能超出。）
 -- 解决办法
预留位置，但仍会出现以下缺点：预留的位置根本用不到，浪费资源；代办事项超过预留位置，又将重新转移。
 -- 优点
你能根据第一个元素的位置，简单快速推出之后元素的位置。所以随机读取元素，数组效率高，可以迅速找到数组任何元素

 -- 缺点
链表的优点，就是数组的缺点。

链表
每一个元素都存储了，下一个元素的地址。只有有足够的内存空间，就能为链表分配内存。
 -- 优点
增加、插入元素效率高，只有有空位，删除效率也高。

 -- 缺点
读取链表后面的元素，不能直接读取，需要从第一条，一条一条的获取，之后一个元素的地址。读取效率低。


术语
几乎所有的编程语言，都从0开始对数组元素进行编号
元素位置称为索引


选择排序
步骤一：遍历列表，每次找出最大/最小的元素，并从找到的元素记录在新数组中，并从列表中删除那条记录。
步骤二：重复步骤一，直到列表中没有数据，返回新数组，即为排序后的数组。



